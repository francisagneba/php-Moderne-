Commande php :
Commande pour lancer le serveur php
php -S localhost:8000

VS Code éditeur de texte:
Les extensions à mettre en place
1- PHP INTELEPHENSE, améliore la fonctionnalité PHP de VSCode
2- PHP Namespace Resolver : Vous permet d'importer des classe via un simple click droit.
3- Twig Language 2: Vous offre des fonctionnalités et raccourcis dans les fichiers.twig
4- On fait ensuite ctrl , sur Windows et on arrive dans les setting et on cherche : Suggest basic et on décoche la case sur php
5- On fait la recherche : Format et on coche la case Editor: Format On Save. Ce qui veut dire que quand on sauve le fichier VS Code va reformater         avec la bonne indentation.
6- On cherche ensuite : Emmet il nous permet d'écrire le HTML de façon accélérer . Donc on va dans Emmet:Include Languages et on ajoute Twig dans Item et html dans Value. pour le faire on clic sur Add Item et on ecrit Twig et Html et on clic sur OK.

COMPOSER

Pour créer un fichier composer.json, onlance la commande : composer init -n , Ensuite pour installer l'autoload : composer dump-autoload.

Packagist.org est le dépôt principale des librairies de composer. Donc quand on cree une librairie qu'on veut partager ,on la depose dans packagist.Si on veut aussi des librairies pour notre projet, on ira les chercher sur packagist. example: date...

Voici le lien des commandes du PHP moderne : https://cheatography.com/liorchamla/cheat-sheets/les-commandes-php-et-composer-a-connaitre/

SYMFONY

Pour travailler avec Symfony en Https on lance la commande suivante: C:\Users\franc\Desktop\ecommerce> symfony server:ca:install

Ensuite pour lancer le serveur Symfony en local on fait: C:\Users\franc\Desktop\ecommerce> symfony serve -d
Pour arrêter le serveur on lance la commande : Symfony server:stop

Pour utiliser les Annotations on fait :composer require annotations, qui est contenu dans Symfony Flex, il améliore le comportement de composer.
Symfony flex est un plugin qui ajoute des fonctionnalités à Composer.

LE CONTAINER DE SERVICES 
Un service est une Classe ou un Outils qui effectuent des mission pour nous. On les utilise en faisant une Injection de dépendance.
C:\Users\franc\Desktop\ecommerce> php bin/console debug:autowiring  .Cette commande me permet de lister les services, prévu dans Symfony.
Exemple en tapant php bin/console debug:autowiring log il va me ressortir la liste de tous les services de log à utiliser.
On peux se faire livrer les services, c'est ce qu'on appelle AUTOWIRING.

Donc dans Symfony on utilise une librairie qui s'appelle : Symfony/dependency-injection qui contient un Container de service qui lui sait construire des objets et vous le donne.

Comment définit des librairies externe qu'on va télécharger via Composer : on doit les déclarer des le fichier Config/services.yaml
Exemple: Cocur\Slugify\Slugify:~  . Comme ça , le container de service va se charger de créer les objets pour nous.

Quelle est la difference entre une Bibliothèque et un Bundle Symfony ?
Un Bundle est une librairie comme les autres qu'on va aller déclarer dans le fichier bundles.php, donc le container de service va le reconnaitre et travailler avec lui. on n'a pas besoin de le déclarer dans le fichier servive.yaml , comme les autres librairie pour qu'il le prenne en compte.
Exemple on va installer la librairie TWIG. on fais : composer require twig
PS C:\Users\franc\Desktop\ecommerce> php bin/console debug:autowiring --all twig . Cette commande permet de savoir si Twig est connu par notre Container de service .

TWIG :Lien de la documentation :https://twig.symfony.com
C'est un langage de Template qui permet d'écrit HTML plus simplement. C'est une syntaxe plus simple. on va retrouver les boucles For et le condition. if/ elseif/else.

public function hello(string $prenom, Environment $twig): Response
html:5  dans le fichier hello.html.twig

Héritage de Template : les block dans notre Template de Base sont des Trous don on peut changer le contenu.
Le mot clé extend pour hériter du Template de base exemple : {% extends "base.html.twig" %}
le mot clé include pour inclure un Template dans un autre Template exemple: {% include "_formateur.html.twig" %}

Voici comment créer une variable en Twig : {% set formateur = formateur1 %}

Utilisation de BOOTSWATCH pour la vu de notre site.

DOCTRINE
